buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()

    }

}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "java"
    version = '1.0'

    ext {
        appName = "ChessGame"
        gdxVersion = '1.9.14'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
        junitVersion = '5.6.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
    test {
        useJUnitPlatform()
    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        implementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        implementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        implementation "org.junit.platform:junit-platform-commons:1.5.2"
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        implementation "com.underwaterapps.overlap2druntime:overlap2d-runtime-libgdx:0.1.0"
        implementation "com.esotericsoftware.spine:spine-libgdx:3.6.53.1"
        implementation "net.dermetfan.libgdx-utils:libgdx-utils-box2d:0.13.4"
        implementation "net.dermetfan.libgdx-utils:libgdx-utils:0.13.4"
        implementation "com.kotcrab.vis:vis-ui:1.3.0"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

project(":desktop") {
    apply plugin: "java-library"

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        implementation "com.underwaterapps.overlap2druntime:overlap2d-runtime-libgdx:0.1.0"
        implementation "com.esotericsoftware.spine:spine-libgdx:3.6.53.1"
        implementation "net.dermetfan.libgdx-utils:libgdx-utils-box2d:0.13.4"
        implementation "net.dermetfan.libgdx-utils:libgdx-utils:0.13.4"
        implementation "com.kotcrab.vis:vis-ui:1.3.0"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        implementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        implementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        implementation "org.junit.platform:junit-platform-commons:1.5.2"

    }
    jar {
        archiveName = 'Chess.jar'

        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

        manifest {
            attributes 'Main-Class': 'com/ourshipsgame/desktop/DesktopLauncher',
                    'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
        }
        dependsOn('dependencies')
    }

}




